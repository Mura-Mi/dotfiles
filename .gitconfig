[user]
	name = Takuya \"Mura-Mi\" Murakami
	email = mura.mi.nantoka@gmail.com
[alias]
  logg = log --stat --decorate=short --pretty=format:'%C(yellow)%h %Cgreen%cr %Cblue%cn%Cred%d %Creset%s %C(cyan)%b'
  lv = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --exclude=upstream/*
  lvall = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
  c = commit
  prune = fetch --prune
  ca = commit -a
  cm = commit -m
  cam = commit -a -m
  am = commit --amend
  came = commit -a --amend
  st = status
  b = branch
  bD = branch -D
  ba = branch -a
  br = branch -r
  bd = branch -d
  bar = branch -ar
  bra = branch -ra
  bd = branch -d
  pra = fetch --prune --all
  co = checkout
  cob = checkout -b
  cb = checkout -b
  lo = log --oneline
  l = log
  di = diff
  df = diff
  diffst = diff --staged
  dw = diff --color-words=.
  undo = reset --soft HEAD^
  ad = add
  rb = rebase
  rv = remote -v
  reword = commit --amend
  amend = commit --amend
  fixup = "!f() { git commit --fixup $1; }; f"
  sq = "!f() { git rebase -i $1 --autosquash; }; f"
  squash = "!f() { git rebase -i $1 --autosquash; }; f"
  startpr = commit --allow-empty -m 
  stashes = stash list
  eva = stash save --include-untracked
  pop = stash pop
  catchup = "!f() { git fetch upstream && git checkout master && git merge upstream/master && git remote prune origin; }; f"
  latest = diff HEAD^ HEAD
  bclean = "!f() { git branch | egrep -v master | xargs git branch -d; }; f"
  addp = add -p

[core]
	editor = /usr/bin/vim
[color]
  ui = true

[status]
  showUntrackedFiles = all

[ghq]
    root = ~/dev
